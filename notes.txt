npm init -> server.js

create dev and prod dbs on MongoDB (unique auth credentials ideal)

mkdir config

touch config/keys.js config/dev.js config/prod.js

add key/value pair in config/dev.js for mongo_uri

add key/value pair in config/dev.js for jwt_secret

node
require('crypto').randomBytes(64).toString('hex')

touch .gitignore -> node_modules && config/dev.js

create git repository for project

npm i express express-validator bcryptjs jsonwebtoken mongoose concurrently

touch server.js

package.json

"scripts": {
    "start": "node server.js",
    "server": "nodemon server.js",
    "client": "npm start --prefix client",
    "dev": "concurrently \"npm run server\" \"npm run client\""
}

mkdir models

touch models/User.js

mkdir routes

touch routes/auth.js

mkdir middleware

touch middleware/auth.js

create and test routes in postman (see Mernbook in Postman)

mkdir utils

touch utils/set_auth_token.js (Includes Authorization token in each HTTP request)

create auth/load_user action creator to maintain user in state

the token is set in localStorage by the auth reducer

npx create-react-app client

cd client

delete .gitignore and README.md

npm i axios react-router-dom redux react-redux redux-thunk moment react-moment http-proxy-middleware formik materialize-css moment node-sass yup react-alert uuid

client/src -> delete everything except App.js and index.js

touch client/src/setupProxy.js

set up alert component, reducer, action and provider in App.js

create PrivateRoute component

add heroku-postbuild script to server's package.json

heroku create <appname>

add environment variables on heroku settings